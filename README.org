#+TITLE: Python bitcoin wallet.dat explore
#+PROPERTY: header-args:sh :session *shell python-bitcoin-wallet-dat-explore sh* :results silent raw
#+PROPERTY: header-args:python :session *shell python-bitcoin-wallet-dat-explore python* :results silent raw
#+OPTIONS: ^:nil

** System environment

** Install bsddb3

Install Berkeley DB libraries.

#+BEGIN_SRC sh
apt install libdb-dev
#+END_SRC

Install pip package

#+BEGIN_SRC sh
pip install bsddb3
#+END_SRC

** Imports

#+BEGIN_SRC python
from bsddb3.db import *
import csv
#+END_SRC

** Open a wallet.dat database

#+BEGIN_SRC python
def open_wallet_database(path, wallet):
    db_env = DBEnv(0)
    db_env.open(PATH, (DB_CREATE|DB_INIT_LOCK|DB_INIT_LOG|DB_INIT_MPOOL|DB_INIT_TXN|DB_THREAD|DB_RECOVER))
    db = DB(db_env)
    flags = DB_THREAD | DB_RDONLY
    db.open("wallet.dat", "main", DB_BTREE, flags)
    return db
#+END_SRC

** Parse key

#+BEGIN_SRC python
def parse_key(data):
    s = data[0]
    t = data[1:s+1]
    key = data[s+1:]
    return (t, key)
#+END_SRC

** Parse database

#+BEGIN_SRC python
def parse_database(db):
    for k, v in db.items():
        t, key = parse_key(k)
        yield (t, key, v)
#+END_SRC

** Get types statistics

#+BEGIN_SRC python
def get_types_statistics(types):
    d = dict()
    for t in types:
        if t in d:
            d[t] += 1
        else:
            d[t] = 1
    return d
#+END_SRC

** Save hash to CSV

#+BEGIN_SRC python
def save_to_csv(db, csvfile):
    csvwriter = csv.writer(csvfile)
    for t, k, v in parse_database(db):
        csvwriter.writerow((t.decode(), k.hex(), hash(v)))
#+END_SRC

** Tests

#+BEGIN_SRC python
PATH = ".local"
WALLET = "wallet.dat"
#+END_SRC

#+BEGIN_SRC python
db = open_wallet_database(PATH, WALLET)
#+END_SRC

#+BEGIN_SRC python
get_types_statistics(map(lambda x: x[0], parse_database(db)))
#+END_SRC

#+BEGIN_SRC python
CSV_FILE = ".local/wallet.csv"
#+END_SRC

#+BEGIN_SRC python
f = open(CSV_FILE, "wt")
save_to_csv(db, f)
#+END_SRC

** References

- https://github.com/joric/pywallet
